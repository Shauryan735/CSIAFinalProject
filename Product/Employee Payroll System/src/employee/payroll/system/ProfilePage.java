/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employee.payroll.system;

/**
 *
 * @author shauryanratan
 */

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;


public class ProfilePage extends javax.swing.JFrame {
    public boolean hasEmployees = true;
    /**
     * Creates new form ProfilePage
     */
    public ProfilePage() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        ProfileCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btn_MainPage = new javax.swing.JButton();
        btn_Back = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_Profile = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_Name = new javax.swing.JTextField();
        txt_Password = new javax.swing.JTextField();
        btn_Create = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txt_Dept = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Company Name");

        btn_MainPage.setText("Main Menu");
        btn_MainPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MainPageActionPerformed(evt);
            }
        });

        btn_Back.setText("Back");
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });

        jLabel2.setText("Profile Manager");

        jLabel3.setText("Select profile");

        cmb_Profile.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_ProfilePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmb_Profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_ProfileActionPerformed(evt);
            }
        });

        jLabel4.setText("Username");

        jLabel5.setText("Password");

        btn_Create.setText("Create");
        btn_Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CreateActionPerformed(evt);
            }
        });

        btn_Update.setText("Update");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });

        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        jLabel6.setText("Department");

        txt_Dept.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(cmb_Profile, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_MainPage, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_Back, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(19, 19, 19))
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_Create)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Update)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Delete))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addGap(50, 50, 50)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_Dept)
                                .addComponent(txt_Password)))))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_MainPage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Back))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmb_Profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txt_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Dept, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Create)
                    .addComponent(btn_Update)
                    .addComponent(btn_Delete))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_MainPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MainPageActionPerformed
        MainPage page = new MainPage();
        page.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_MainPageActionPerformed

    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed
        MainPage page = new MainPage();
        page.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_BackActionPerformed

    private void btn_CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CreateActionPerformed
        String[] recs = cmb_Profile.getSelectedItem().toString().split("-");
        int id = Integer.parseInt(recs[0].substring(0, recs[0].length()-1));
        String username = txt_Name.getText();
        String password = txt_Password.getText();
        String dept = txt_Dept.getText();
        if(!username.equals("") && !password.equals("")){
            if(!username.contains(" ")){
                String query = "INSERT INTO Login(id,username,password,dept) "
                        + "VALUES(?,?,?,?)";
                try {
                    Connection con = DB.connect();
                    PreparedStatement pst = con.prepareStatement(query);
                    pst.setInt(1, id);
                    pst.setString(2, username);
                    pst.setString(3, password);
                    pst.setString(4, dept);
                    pst.executeUpdate();
                    txt_Name.setText(null);
                    txt_Password.setText(null);
                    JOptionPane.showMessageDialog(null, "Profile Created!");
                }catch (SQLException e){
                    System.out.println(e.getMessage());
                }
            }
            else
                JOptionPane.showMessageDialog(null, "Username must not have spaces!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null, "Feilds cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
        
    }//GEN-LAST:event_btn_CreateActionPerformed

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        String[] recs = cmb_Profile.getSelectedItem().toString().split("-");
        int id = Integer.parseInt(recs[0].substring(0, recs[0].length()-1));
        String username = txt_Name.getText();
        String password = txt_Password.getText();
        String dept = txt_Dept.getText();
        if(!username.equals("") && !password.equals("")){
            if(!username.contains(" ")){
                String query = "UPDATE login SET username = ? , password = ? WHERE id = ?";
                try {
                    Connection con = DB.connect();
                    PreparedStatement pst = con.prepareStatement(query);
                    pst.setString(1, username);
                    pst.setString(2, password);
                    pst.setInt(3, id);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Profile Updated!");
                }catch (SQLException e){
                    System.out.println(e.getMessage());
                }
            }
            else
                JOptionPane.showMessageDialog(null, "Username must not have spaces!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null, "Feilds cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        int delete = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this profile?","Delete",JOptionPane.YES_NO_OPTION);
        if(delete == 0){
            String[] recs = cmb_Profile.getSelectedItem().toString().split("-");
            int id = Integer.parseInt(recs[0].substring(0, recs[0].length()-1));
            String query = "DELETE FROM login WHERE id = ?";
            try {
                Connection con = DB.connect();
                PreparedStatement pst = con.prepareStatement(query);
                pst.setInt(1, id);
                pst.executeUpdate();
                txt_Name.setText("");
                txt_Password.setText("");
                JOptionPane.showMessageDialog(null, "Profile Deleted!");
            }catch (SQLException e){
                System.out.println(e.getMessage());
            }
        }                                        
    }//GEN-LAST:event_btn_DeleteActionPerformed

    private void cmb_ProfilePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_ProfilePopupMenuWillBecomeInvisible
       
    }//GEN-LAST:event_cmb_ProfilePopupMenuWillBecomeInvisible

    private void cmb_ProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_ProfileActionPerformed
        String[] recs = cmb_Profile.getSelectedItem().toString().split("-");
        int id = Integer.parseInt(recs[0].substring(0, recs[0].length()-1));
        String sql = "select dept from employee where id = "+id;
        Connection con = DB.connect();
        String dept = "null";
        try{
            Statement pst = con.createStatement();
            ResultSet rs = pst.executeQuery(sql);
            while(rs.next()){
                dept = rs.getString("dept");
            }
            con.close();
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Employees couldn't be fetched", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex);
        }
        sql = "select username,password from login where id = "+id;
        con = DB.connect();
        String username = "";
        String password = "";
        try{
            Statement pst = con.createStatement();
            ResultSet rs = pst.executeQuery(sql);
            while(rs.next()){
                username = rs.getString("username");
                password = rs.getString("password");
            }
            con.close();
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Login IDs couldn't be fetched", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex);
        }
        txt_Name.setText(username);
        txt_Password.setText(password);
        txt_Dept.setText(dept);
        if(txt_Name.getText().equals("") && txt_Password.getText().equals("")){
            btn_Create.setEnabled(true);
        }
        else
            btn_Create.setEnabled(false);
    }//GEN-LAST:event_cmb_ProfileActionPerformed

    private void ProfileCombo () {
        ArrayList<String> list = new ArrayList<String>();
        String sql = "select id,fname from employee";
        Connection con = DB.connect();
        try{
            list.clear();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                int id = rs.getInt("id");
                String name = rs.getString("fname");
                list.add(id+" - "+name);
            }
            con.close();
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Employees couldn't be fetched", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex);
        }
        
        if(list.size() < 1){
            JOptionPane.showMessageDialog(null, "No Employee Found in the Database. Create Employees First!", "Error", JOptionPane.ERROR_MESSAGE);
            hasEmployees = false;
        }
        else{
            for (int i = 0; i < list.size(); i++) {
                cmb_Profile.addItem(list.get(i));
            }
        }
    }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Back;
    private javax.swing.JButton btn_Create;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_MainPage;
    private javax.swing.JButton btn_Update;
    private javax.swing.JComboBox<String> cmb_Profile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txt_Dept;
    private javax.swing.JTextField txt_Name;
    private javax.swing.JTextField txt_Password;
    // End of variables declaration//GEN-END:variables
}
